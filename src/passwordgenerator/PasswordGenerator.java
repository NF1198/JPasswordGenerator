/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passwordgenerator;

import java.security.SecureRandom;
import java.text.ParseException;
import java.util.LinkedList;
import java.util.List;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Nicholas Folse <https://github.com/NF1198>
 */
public class PasswordGenerator extends javax.swing.JFrame {

    /**
     * Creates new form PasswordGenerator
     */
    public PasswordGenerator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordField = new javax.swing.JTextField();
        lengthSpinner = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        opts_atoz = new javax.swing.JCheckBox();
        opts_AtoZ = new javax.swing.JCheckBox();
        opts_0to9 = new javax.swing.JCheckBox();
        generateButton = new javax.swing.JButton();
        opts_spec1 = new javax.swing.JCheckBox();
        opts_spec2 = new javax.swing.JCheckBox();
        maxRunSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Password Generator");
        setLocationByPlatform(true);

        passwordField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lengthSpinner.setModel(new javax.swing.SpinnerNumberModel(14, 6, 30, 1));

        jLabel1.setText("length");

        opts_atoz.setSelected(true);
        opts_atoz.setText("a-z");

        opts_AtoZ.setSelected(true);
        opts_AtoZ.setText("A-Z");

        opts_0to9.setSelected(true);
        opts_0to9.setText("0-9");

        generateButton.setText("generate");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        opts_spec1.setSelected(true);
        opts_spec1.setText("!@#$%^&*");

        opts_spec2.setText("()_-=+[]{}~|\\");

            maxRunSpinner.setModel(new javax.swing.SpinnerNumberModel(3, 1, null, 1));

            jLabel2.setText("max run");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(passwordField)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(maxRunSpinner)
                                .addComponent(lengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(generateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(opts_atoz)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(opts_AtoZ)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(opts_0to9)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(opts_spec1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(opts_spec2)
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lengthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(opts_atoz)
                        .addComponent(opts_AtoZ)
                        .addComponent(opts_0to9)
                        .addComponent(opts_spec1)
                        .addComponent(opts_spec2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(maxRunSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(generateButton))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        Random rand = new SecureRandom();
        final String atoz = "abcdefghijklmnopqrstuvwxyz";
        final String AtoZ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        final String _0to9 = "0123456789";
        final String spec1 = "!@#$%^&*";
        final String spec2 = "()_-=+[]{}~|\\";
        final List<String> opts = new LinkedList<>();
        if (opts_atoz.isSelected()) {
            opts.add(atoz);
        }
        if (opts_AtoZ.isSelected()) {
            opts.add(AtoZ);
        }
        if (opts_0to9.isSelected()) {
            opts.add(_0to9);
        }
        if (opts_spec1.isSelected()) {
            opts.add(spec1);
        }
        if (opts_spec2.isSelected()) {
            opts.add(spec2);
        }
        if (opts.size() == 0) {
            opts_atoz.setSelected(true);
            opts.add(atoz);
        }
        try {
            lengthSpinner.commitEdit();
        } catch (ParseException ex) {
            lengthSpinner.setValue(12);
        }
        int prevOpt = -1;
        int prevOptCount = 0;
        StringBuilder pw = new StringBuilder();
        final int len = ((Number) (lengthSpinner.getValue())).intValue();
        final int maxRun = ((Number) (maxRunSpinner.getValue())).intValue() - 1;
        for (int idx = 0; idx < len; idx++) {
            int optIdx = rand.nextInt(opts.size());
            while (opts.size() > 1 && prevOptCount >= maxRun && optIdx == prevOpt) {
                optIdx = rand.nextInt(opts.size());
            }
            if (optIdx == prevOpt) {
                prevOptCount++;
            } else {
                prevOpt = optIdx;
                prevOptCount = 0;
            }
            final String optStr = opts.get(optIdx);
            final int offsetIdx = rand.nextInt(optStr.length());
            pw.append(optStr.charAt(offsetIdx));
        }
        passwordField.setText(pw.toString());
    }//GEN-LAST:event_generateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordGenerator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PasswordGenerator app = new PasswordGenerator();
                app.setLocationRelativeTo(null);
                app.generateButtonActionPerformed(null);
                app.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner lengthSpinner;
    private javax.swing.JSpinner maxRunSpinner;
    private javax.swing.JCheckBox opts_0to9;
    private javax.swing.JCheckBox opts_AtoZ;
    private javax.swing.JCheckBox opts_atoz;
    private javax.swing.JCheckBox opts_spec1;
    private javax.swing.JCheckBox opts_spec2;
    private javax.swing.JTextField passwordField;
    // End of variables declaration//GEN-END:variables
}
